<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SamsaraMBJC&#39;Blog</title>
  
  <subtitle>与你于此的相逢只是偶然吗？</subtitle>
  <link href="https://samsarambjc.github.io/atom.xml" rel="self"/>
  
  <link href="https://samsarambjc.github.io/"/>
  <updated>2024-07-27T17:33:00.247Z</updated>
  <id>https://samsarambjc.github.io/</id>
  
  <author>
    <name>SamsaraMBJC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://samsarambjc.github.io/posts/4a17b156.html"/>
    <id>https://samsarambjc.github.io/posts/4a17b156.html</id>
    <published>2024-07-27T17:33:00.247Z</published>
    <updated>2024-07-27T17:33:00.247Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【MBJC】学习笔记1 windows11 wsl2 配置Linux子系统 安装 Ubuntu22.04 配置gnome GUI</title>
    <link href="https://samsarambjc.github.io/posts/58648090.html"/>
    <id>https://samsarambjc.github.io/posts/58648090.html</id>
    <published>2024-07-27T17:33:00.247Z</published>
    <updated>2024-07-27T17:33:00.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu22-04-配置gnome-GUI"><a href="#【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu22-04-配置gnome-GUI" class="headerlink" title="【MBJC】windows11 wsl2 配置Linux子系统 安装 Ubuntu22.04 配置gnome GUI"></a>【MBJC】windows11 wsl2 配置Linux子系统 安装 Ubuntu22.04 配置gnome GUI</h1><h2 id="由于需要在ROS2进行深度强化学习的训练，原有的VMware虚拟机不行，微软wsl2自带的GUI分体式用着不爽，坑很多，无奈只得硬刚。"><a href="#由于需要在ROS2进行深度强化学习的训练，原有的VMware虚拟机不行，微软wsl2自带的GUI分体式用着不爽，坑很多，无奈只得硬刚。" class="headerlink" title="由于需要在ROS2进行深度强化学习的训练，原有的VMware虚拟机不行，微软wsl2自带的GUI分体式用着不爽，坑很多，无奈只得硬刚。"></a>由于需要在ROS2进行深度强化学习的训练，原有的VMware虚拟机不行，微软wsl2自带的GUI分体式用着不爽，坑很多，无奈只得硬刚。</h2><h2 id="wsl2配置较简单，这里不再赘述，详见官方链接-https-learn-microsoft-com-en-us-windows-wsl-install"><a href="#wsl2配置较简单，这里不再赘述，详见官方链接-https-learn-microsoft-com-en-us-windows-wsl-install" class="headerlink" title="wsl2配置较简单，这里不再赘述，详见官方链接: https://learn.microsoft.com/en-us/windows/wsl/install"></a>wsl2配置较简单，这里不再赘述，详见官方链接: <a href="https://learn.microsoft.com/en-us/windows/wsl/install">https://learn.microsoft.com/en-us/windows/wsl/install</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在powershell中输入</span><br><span class="line">wsl --install</span><br></pre></td></tr></table></figure><h2 id="注意开启虚拟机需要的功能"><a href="#注意开启虚拟机需要的功能" class="headerlink" title="注意开启虚拟机需要的功能"></a>注意开启虚拟机需要的功能</h2><p><img src="../img/1/1.png" alt="在这里插入图片描述"></p><h2 id="Microsoft-Store下载Ubuntu-22-04-3LTS"><a href="#Microsoft-Store下载Ubuntu-22-04-3LTS" class="headerlink" title="Microsoft Store下载Ubuntu 22.04.3LTS"></a>Microsoft Store下载Ubuntu 22.04.3LTS</h2><p><img src="../img/1/2.png" alt="Microsoft Store下载Ubuntu 22.04.3LTS"></p><h2 id="设置用户名和密码"><a href="#设置用户名和密码" class="headerlink" title="设置用户名和密码"></a>设置用户名和密码</h2><p><img src="../img/1/3.png" alt="在这里插入图片描述"></p><h2 id="wsl2默认保存在C盘，管理员下启动poweshell依次输入命令修改Ubuntu子系统储存在E盘"><a href="#wsl2默认保存在C盘，管理员下启动poweshell依次输入命令修改Ubuntu子系统储存在E盘" class="headerlink" title="wsl2默认保存在C盘，管理员下启动poweshell依次输入命令修改Ubuntu子系统储存在E盘"></a>wsl2默认保存在C盘，管理员下启动poweshell依次输入命令修改Ubuntu子系统储存在E盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wsl -l --all -v</span><br><span class="line">wsl --<span class="built_in">export</span> Ubuntu-22.04 E:/wsl-ubuntu-22.04.tar</span><br><span class="line">wsl --unregister Ubuntu-22.04</span><br><span class="line">wsl --import Ubuntu-22.04 E:/wsl-ubuntu-22.04 E:/wsl-ubuntu-22.04.tar --version 2</span><br><span class="line">ubuntu2204 config --default-user mbjc</span><br></pre></td></tr></table></figure><p><img src="../img/1/4.png" alt="在这里插入图片描述"></p><h2 id="换阿里源（可选）"><a href="#换阿里源（可选）" class="headerlink" title="换阿里源（可选）"></a>换阿里源（可选）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份原来的软件源</span></span><br><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"><span class="comment"># 编辑软件源</span></span><br><span class="line">sudo nano /etc/apt/sources.list</span><br><span class="line"><span class="comment"># 注释原软件源加入内容</span></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ jammy main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ jammy-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ jammy-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment"># deb https://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse</span></span><br><span class="line"><span class="comment"># deb-src https://mirrors.aliyun.com/ubuntu/ jammy-proposed main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.aliyun.com/ubuntu/ jammy-backports main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="wsl2-不支持-systemd-而-gnome-桌面又是基于-systemd，git-clone如果网络不行也可下载下来，拖进去。"><a href="#wsl2-不支持-systemd-而-gnome-桌面又是基于-systemd，git-clone如果网络不行也可下载下来，拖进去。" class="headerlink" title="wsl2 不支持 systemd 而 gnome 桌面又是基于 systemd，git clone如果网络不行也可下载下来，拖进去。"></a>wsl2 不支持 systemd 而 gnome 桌面又是基于 systemd，git clone如果网络不行也可下载下来，拖进去。</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/DamionGans/ubuntu-wsl2-systemd-script.git</span><br><span class="line"><span class="built_in">cd</span> ubuntu-wsl2-systemd-script/</span><br><span class="line">bash ubuntu-wsl2-systemd-script.sh</span><br></pre></td></tr></table></figure><p><img src="../img/1/5.png" alt="在这里插入图片描述"></p><h2 id="重启ubuntu终端，输入以下命令（安装时间较长，可能受网络影响需要魔法科学上网）Unable-to-install-certain-systemd-reliant-packages-start-services-问题参考链接-https-github-com-microsoft-WSL-discussions-9350"><a href="#重启ubuntu终端，输入以下命令（安装时间较长，可能受网络影响需要魔法科学上网）Unable-to-install-certain-systemd-reliant-packages-start-services-问题参考链接-https-github-com-microsoft-WSL-discussions-9350" class="headerlink" title="重启ubuntu终端，输入以下命令（安装时间较长，可能受网络影响需要魔法科学上网）Unable to install certain systemd reliant packages/start services 问题参考链接: https://github.com/microsoft/WSL/discussions/9350"></a>重启ubuntu终端，输入以下命令（安装时间较长，可能受网络影响需要魔法科学上网）Unable to install certain systemd reliant packages/start services 问题参考链接: <a href="https://github.com/microsoft/WSL/discussions/9350">https://github.com/microsoft/WSL/discussions/9350</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-mark hold acpid acpi-support</span><br><span class="line">sudo apt install ubuntu-desktop</span><br></pre></td></tr></table></figure><h2 id="方法一：结合VcXsrv就可以使用了，VcXsrv安装与配置，参考链接-https-blog-csdn-net-weixin-44478077-article-details-128723158"><a href="#方法一：结合VcXsrv就可以使用了，VcXsrv安装与配置，参考链接-https-blog-csdn-net-weixin-44478077-article-details-128723158" class="headerlink" title="方法一：结合VcXsrv就可以使用了，VcXsrv安装与配置，参考链接: https://blog.csdn.net/weixin_44478077/article/details/128723158"></a>方法一：结合VcXsrv就可以使用了，VcXsrv安装与配置，参考链接: <a href="https://blog.csdn.net/weixin_44478077/article/details/128723158">https://blog.csdn.net/weixin_44478077/article/details/128723158</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo service dbus restart</span><br><span class="line">sudo nano ~/.bashrc</span><br><span class="line"><span class="comment">#输入</span></span><br><span class="line"><span class="built_in">export</span> DISPLAY=$(grep -m 1 nameserver /etc/resolv.conf | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>):0.0</span><br><span class="line"><span class="built_in">export</span> XDG_SESSION_TYPE=x11</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line">gnome-session</span><br></pre></td></tr></table></figure><p><img src="../img/1/6.png" alt="在这里插入图片描述"></p><h2 id="方法二：xrdp远程控制（Windows专业版）参考链接-https-ishwarjagdale-github-io-wslWithGUI-、-http-681314-com-A-3yH5k7dyyV"><a href="#方法二：xrdp远程控制（Windows专业版）参考链接-https-ishwarjagdale-github-io-wslWithGUI-、-http-681314-com-A-3yH5k7dyyV" class="headerlink" title="方法二：xrdp远程控制（Windows专业版）参考链接: https://ishwarjagdale.github.io/wslWithGUI/、 http://681314.com/A/3yH5k7dyyV"></a>方法二：xrdp远程控制（Windows专业版）参考链接: <a href="https://ishwarjagdale.github.io/wslWithGUI/">https://ishwarjagdale.github.io/wslWithGUI/</a>、 <a href="http://681314.com/A/3yH5k7dyyV">http://681314.com/A/3yH5k7dyyV</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install xrdp</span><br><span class="line">sudo <span class="built_in">cp</span> /etc/xrdp/xrdp.ini /etc/xrdp/xrdp.ini.bak</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/3389/3390/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/max_bpp=32/#max_bpp=32\nmax_bpp=128/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/xserverbpp=24/#xserverbpp=24\nxserverbpp=128/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;gnome-session&quot;</span> &gt; ~/.xsession</span><br><span class="line">sudo nano /etc/xrdp/startwm.sh</span><br><span class="line"><span class="comment">#注释两行并加</span></span><br><span class="line"><span class="comment"># test -x /etc/X11/Xsession &amp;&amp; exec /etc/X11/Xsession</span></span><br><span class="line"><span class="comment"># exec /bin/sh /etc/X11/Xsession</span></span><br><span class="line">gnome-session</span><br><span class="line"></span><br><span class="line">sudo systemctl restart xrdp</span><br><span class="line">sudo systemctl status xrdp</span><br><span class="line"><span class="comment"># 管理员启动powershell</span></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">net stop LxssManager</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">net start LxssManager</span><br><span class="line"></span><br><span class="line">sudo /etc/init.d/xrdp start</span><br></pre></td></tr></table></figure><p><img src="../img/1/7.png" alt="在这里插入图片描述"><br><img src="../img/1/8.png" alt="在这里插入图片描述"></p><h3 id="just-enjoy-yourself！"><a href="#just-enjoy-yourself！" class="headerlink" title="just enjoy yourself！"></a>just enjoy yourself！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu22-04-配置gnome-GUI&quot;&gt;&lt;a href=&quot;#【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu22-04-配置gnome-GUI&quot; cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【MBJC】学习笔记2 windows11 wsl2 配置Linux子系统 安装 Ubuntu20.04 配置Nvidia深度强化学习环境</title>
    <link href="https://samsarambjc.github.io/posts/58648090.html"/>
    <id>https://samsarambjc.github.io/posts/58648090.html</id>
    <published>2024-07-27T17:33:00.247Z</published>
    <updated>2024-07-27T17:33:00.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu20-04-配置Nvidia深度强化学习环境"><a href="#【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu20-04-配置Nvidia深度强化学习环境" class="headerlink" title="【MBJC】windows11 wsl2 配置Linux子系统 安装 Ubuntu20.04 配置Nvidia深度强化学习环境"></a>【MBJC】windows11 wsl2 配置Linux子系统 安装 Ubuntu20.04 配置Nvidia深度强化学习环境</h1><h2 id="wsl2计划失败，最终使用双系统，参考链接：-https-www-bilibili-com-video-BV1Cc41127B9"><a href="#wsl2计划失败，最终使用双系统，参考链接：-https-www-bilibili-com-video-BV1Cc41127B9" class="headerlink" title="wsl2计划失败，最终使用双系统，参考链接： https://www.bilibili.com/video/BV1Cc41127B9"></a>wsl2计划失败，最终使用双系统，参考链接： <a href="https://www.bilibili.com/video/BV1Cc41127B9">https://www.bilibili.com/video/BV1Cc41127B9</a></h2><h2 id="由于需要使用ISaac-Gym做深度强化学习仿真，手边仅有一台有显卡的win笔记本，因此尝试基于wsl2配环境"><a href="#由于需要使用ISaac-Gym做深度强化学习仿真，手边仅有一台有显卡的win笔记本，因此尝试基于wsl2配环境" class="headerlink" title="由于需要使用ISaac Gym做深度强化学习仿真，手边仅有一台有显卡的win笔记本，因此尝试基于wsl2配环境"></a>由于需要使用ISaac Gym做深度强化学习仿真，手边仅有一台有显卡的win笔记本，因此尝试基于wsl2配环境</h2><h2 id="wsl2配置较简单，这里不再赘述，详见官方链接-https-learn-microsoft-com-en-us-windows-wsl-install"><a href="#wsl2配置较简单，这里不再赘述，详见官方链接-https-learn-microsoft-com-en-us-windows-wsl-install" class="headerlink" title="wsl2配置较简单，这里不再赘述，详见官方链接: https://learn.microsoft.com/en-us/windows/wsl/install"></a>wsl2配置较简单，这里不再赘述，详见官方链接: <a href="https://learn.microsoft.com/en-us/windows/wsl/install">https://learn.microsoft.com/en-us/windows/wsl/install</a></h2><h2 id="安装wsl2的cuda-toolkit，链接-https-developer-nvidia-com-cuda-downloads-target-os-Linux-amp-target-arch-x86-64-amp-Distribution-WSL-Ubuntu-amp-target-version-2-0-amp-target-type-deb-local"><a href="#安装wsl2的cuda-toolkit，链接-https-developer-nvidia-com-cuda-downloads-target-os-Linux-amp-target-arch-x86-64-amp-Distribution-WSL-Ubuntu-amp-target-version-2-0-amp-target-type-deb-local" class="headerlink" title="安装wsl2的cuda toolkit，链接: https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=WSL-Ubuntu&amp;target_version=2.0&amp;target_type=deb_local"></a>安装wsl2的cuda toolkit，链接: <a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=WSL-Ubuntu&amp;target_version=2.0&amp;target_type=deb_local">https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;target_arch=x86_64&amp;Distribution=WSL-Ubuntu&amp;target_version=2.0&amp;target_type=deb_local</a></h2><p>整个过程只需要安装一个win11环境的cuda驱动，在WSL中不需要安装，WSL会直接使用win11环境的驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo wget https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-wsl-ubuntu.pin</span><br><span class="line">sudo <span class="built_in">mv</span> cuda-wsl-ubuntu.pin /etc/apt/preferences.d/cuda-repository-pin-600</span><br><span class="line">sudo wget https://developer.download.nvidia.com/compute/cuda/12.5.0/local_installers/cuda-repo-wsl-ubuntu-12-5-local_12.5.0-1_amd64.deb</span><br><span class="line">sudo dpkg -i cuda-repo-wsl-ubuntu-12-5-local_12.5.0-1_amd64.deb</span><br><span class="line">sudo <span class="built_in">cp</span> /var/cuda-repo-wsl-ubuntu-12-5-<span class="built_in">local</span>/cuda-*-keyring.gpg /usr/share/keyrings/</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install cuda-toolkit-12-5</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/cuda/bin</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:/usr/local/cuda/lib64:/usr/lib/x86_64-linux-gnu</span><br></pre></td></tr></table></figure><h2 id="安装Miniconda"><a href="#安装Miniconda" class="headerlink" title="安装Miniconda"></a>安装Miniconda</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/miniconda3</span><br><span class="line">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh</span><br><span class="line">bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3</span><br><span class="line"><span class="built_in">rm</span> -rf ~/miniconda3/miniconda.sh</span><br><span class="line"></span><br><span class="line">~/miniconda3/bin/conda init bash</span><br><span class="line">~/miniconda3/bin/conda init zsh</span><br></pre></td></tr></table></figure><h2 id="配conda环境，pytorch环境直接下载whl安装，链接-https-download-pytorch-org-whl"><a href="#配conda环境，pytorch环境直接下载whl安装，链接-https-download-pytorch-org-whl" class="headerlink" title="配conda环境，pytorch环境直接下载whl安装，链接: https://download.pytorch.org/whl/"></a>配conda环境，pytorch环境直接下载whl安装，链接: <a href="https://download.pytorch.org/whl/">https://download.pytorch.org/whl/</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda create -n wlg python=3.8</span><br><span class="line">pip install torch-2.3.0+cu121-cp38-cp38-linux_x86_64.whl</span><br><span class="line">pip install torchvision-0.18.0+cu121-cp38-cp38-linux_x86_64.whl</span><br><span class="line">pip install triton-2.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl</span><br></pre></td></tr></table></figure><h2 id="安装Isaac-Gym，参考链接-https-github-com-clearlab-sustech-Wheel-Legged-Gym"><a href="#安装Isaac-Gym，参考链接-https-github-com-clearlab-sustech-Wheel-Legged-Gym" class="headerlink" title="安装Isaac Gym，参考链接: https://github.com/clearlab-sustech/Wheel-Legged-Gym"></a>安装Isaac Gym，参考链接: <a href="https://github.com/clearlab-sustech/Wheel-Legged-Gym">https://github.com/clearlab-sustech/Wheel-Legged-Gym</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xf IsaacGym_Preview_4_Package.tar.gz</span><br><span class="line"><span class="built_in">cd</span> isaacgym/python &amp;&amp; pip install -e .</span><br><span class="line"><span class="built_in">cd</span> examples &amp;&amp; python 1080_balls_of_solitude.py</span><br><span class="line"><span class="built_in">cd</span> Wheel-Legged-Gym &amp;&amp; pip install -e .</span><br></pre></td></tr></table></figure><h2 id="cd-examples-amp-amp-python-1080-balls-of-solitude-py出现报错"><a href="#cd-examples-amp-amp-python-1080-balls-of-solitude-py出现报错" class="headerlink" title="cd examples &amp;&amp; python 1080_balls_of_solitude.py出现报错"></a>cd examples &amp;&amp; python 1080_balls_of_solitude.py出现报错</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">~/isaacgym/python/examples$ python 1080_balls_of_solitude.py</span><br><span class="line"></span><br><span class="line">*** Warning: failed to preload CUDA lib</span><br><span class="line">*** Warning: failed to preload PhysX libs</span><br><span class="line">Importing module <span class="string">&#x27;gym_38&#x27;</span> (/home/mbjc/isaacgym/python/isaacgym/_bindings/linux-x86_64/gym_38.so)</span><br><span class="line">Setting GYM_USD_PLUG_INFO_PATH to /home/mbjc/isaacgym/python/isaacgym/_bindings/linux-x86_64/usd/plugInfo.json</span><br><span class="line">WARNING: Forcing CPU pipeline.</span><br><span class="line">Not connected to PVD</span><br><span class="line">/buildAgent/work/99bede84aa0a52c2/source/physx/src/gpu/PxPhysXGpuModuleLoader.cpp (148) : internal error : libcuda.so!</span><br><span class="line"></span><br><span class="line">[Warning] [carb.gym.plugin] Failed to create a PhysX CUDA Context Manager. Falling back to CPU.</span><br><span class="line">Physics Engine: PhysX</span><br><span class="line">Physics Device: cpu</span><br><span class="line">GPU Pipeline: disabled</span><br><span class="line">Segmentation fault</span><br></pre></td></tr></table></figure><h2 id="解决方法：Isaac-Gym不支持wsl2，可以尝试docker安装，参考链接-https-forums-developer-nvidia-com-t-failed-to-acquire-interface-178379-13"><a href="#解决方法：Isaac-Gym不支持wsl2，可以尝试docker安装，参考链接-https-forums-developer-nvidia-com-t-failed-to-acquire-interface-178379-13" class="headerlink" title="解决方法：Isaac Gym不支持wsl2，可以尝试docker安装，参考链接: https://forums.developer.nvidia.com/t/failed-to-acquire-interface/178379/13"></a>解决方法：Isaac Gym不支持wsl2，可以尝试docker安装，参考链接: <a href="https://forums.developer.nvidia.com/t/failed-to-acquire-interface/178379/13">https://forums.developer.nvidia.com/t/failed-to-acquire-interface/178379/13</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span>:/usr/lib/wsl/lib/</span><br></pre></td></tr></table></figure><h2 id="成功解决，使用docker启动成功，参考链接-https-docs-nvidia-com-datacenter-cloud-native-container-toolkit-latest-install-guide-html、https-github-com-clearlab-sustech-Wheel-Legged-Gym-isaacgym-docs-install-html"><a href="#成功解决，使用docker启动成功，参考链接-https-docs-nvidia-com-datacenter-cloud-native-container-toolkit-latest-install-guide-html、https-github-com-clearlab-sustech-Wheel-Legged-Gym-isaacgym-docs-install-html" class="headerlink" title="成功解决，使用docker启动成功，参考链接: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html、https://github.com/clearlab-sustech/Wheel-Legged-Gym/isaacgym/docs/install.html"></a>成功解决，使用docker启动成功，参考链接: <a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html">https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html</a>、<a href="https://github.com/clearlab-sustech/Wheel-Legged-Gym/isaacgym/docs/install.html">https://github.com/clearlab-sustech/Wheel-Legged-Gym/isaacgym/docs/install.html</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Importing module <span class="string">&#x27;gym_38&#x27;</span> (/opt/isaacgym/python/isaacgym/_bindings/linux-x86_64/gym_38.so)</span><br><span class="line">Setting GYM_USD_PLUG_INFO_PATH to /opt/isaacgym/python/isaacgym/_bindings/linux-x86_64/usd/plugInfo.json</span><br><span class="line">WARNING: Forcing CPU pipeline.</span><br><span class="line">Not connected to PVD</span><br><span class="line">+++ Using GPU PhysX</span><br><span class="line">Physics Engine: PhysX</span><br><span class="line">Physics Device: cuda:0</span><br><span class="line">GPU Pipeline: disabled</span><br><span class="line">WARNING: lavapipe is not a conformant vulkan implementation, testing use only.</span><br><span class="line">[Error] [carb.windowing-glfw.plugin] GLFW initialization failed.</span><br><span class="line">[Error] [carb.windowing-glfw.plugin] GLFW window creation failed!</span><br><span class="line">[Error] [carb.gym.plugin] Failed to create Window <span class="keyword">in</span> CreateGymViewerInternal</span><br><span class="line">*** Failed to create viewer</span><br></pre></td></tr></table></figure><h2 id="安装GUI"><a href="#安装GUI" class="headerlink" title="安装GUI"></a>安装GUI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">!给root用户重设密码：</span><br><span class="line">passwd            </span><br><span class="line"></span><br><span class="line">!安装GUI命令:</span><br><span class="line">sudo apt update &amp;&amp; sudo apt -y upgrade</span><br><span class="line">sudo apt-get purge xrdp</span><br><span class="line">sudo apt install -y xrdp</span><br><span class="line">sudo apt install -y xfce4</span><br><span class="line">sudo apt install -y xfce4-goodies</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">cp</span> /etc/xrdp/xrdp.ini /etc/xrdp/xrdp.ini.bak</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/3389/3390/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/max_bpp=32/#max_bpp=32\nmax_bpp=128/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/xserverbpp=24/#xserverbpp=24\nxserverbpp=128/g&#x27;</span> /etc/xrdp/xrdp.ini</span><br><span class="line"><span class="built_in">echo</span> xfce4-session &gt; ~/.xsession</span><br><span class="line"></span><br><span class="line">sudo nano /etc/xrdp/startwm.sh</span><br><span class="line">!以下这两行注释掉:</span><br><span class="line"><span class="comment">#test -x /etc/X11/Xsession &amp;&amp; exec /etc/X11/Xsession</span></span><br><span class="line"><span class="comment">#exec /bin/sh /etc/X11/Xsession</span></span><br><span class="line"></span><br><span class="line">!添加这一行:</span><br><span class="line"><span class="comment"># xfce</span></span><br><span class="line">startxfce4</span><br><span class="line"></span><br><span class="line">sudo /etc/init.d/xrdp start</span><br><span class="line"></span><br><span class="line">!WINDOWS远程连接</span><br><span class="line">localhost:3389</span><br></pre></td></tr></table></figure><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates</span><br><span class="line">curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># list all docker-ce version</span></span><br><span class="line">apt list -a docker-ce</span><br><span class="line">sudo apt install -y containerd.io docker-ce=5:20.10.16~3-0~ubuntu-focal docker-ce-cli=5:20.10.16~3-0~ubuntu-focal</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create required directories</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/systemd/system/docker.service.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create daemon json config file</span></span><br><span class="line">sudo vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;https://2efk2pit.mirror.aliyuncs.com&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;dns&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;223.5.5.5&quot;</span>,</span><br><span class="line">      <span class="string">&quot;119.29.29.29&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;exec-opts&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;native.cgroupdriver=systemd&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opts&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;100m&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;storage-driver&quot;</span>: <span class="string">&quot;overlay2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sudo usermod -aG docker mbjc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Start and enable services</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><h2 id="安装nvidia-container-toolkit"><a href="#安装nvidia-container-toolkit" class="headerlink" title="安装nvidia-container-toolkit"></a>安装nvidia-container-toolkit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \</span><br><span class="line">  &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \</span><br><span class="line">    sed <span class="string">&#x27;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g&#x27;</span> | \</span><br><span class="line">    sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/nvidia-container-toolkit.list</span><br><span class="line"></span><br><span class="line">sed -i -e <span class="string">&#x27;/experimental/ s/^#//g&#x27;</span> /etc/apt/sources.list.d/nvidia-container-toolkit.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y nvidia-container-toolkit</span><br><span class="line"></span><br><span class="line">sudo nvidia-ctk runtime configure --runtime=docker</span><br><span class="line"></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="安装Isaac-Gym，docker方式启动"><a href="#安装Isaac-Gym，docker方式启动" class="headerlink" title="安装Isaac Gym，docker方式启动"></a>安装Isaac Gym，docker方式启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xf IsaacGym_Preview_4_Package.tar.gz</span><br><span class="line"><span class="built_in">cd</span> isaacgym/docker</span><br><span class="line">bash build.sh</span><br><span class="line">bash run.sh</span><br></pre></td></tr></table></figure><h2 id="调试代码"><a href="#调试代码" class="headerlink" title="调试代码"></a>调试代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看容器</span></span><br><span class="line">docker ps -a </span><br><span class="line"></span><br><span class="line"><span class="comment">#删除容器</span></span><br><span class="line">docker <span class="built_in">rm</span> isaacgym_container </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu20-04-配置Nvidia深度强化学习环境&quot;&gt;&lt;a href=&quot;#【MBJC】windows11-wsl2-配置Linux子系统-安装-Ubuntu20-04-配置Nvidia深度</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【MBJC】学习笔记3 Live2d Web SDK</title>
    <link href="https://samsarambjc.github.io/posts/70982e70.html"/>
    <id>https://samsarambjc.github.io/posts/70982e70.html</id>
    <published>2024-07-27T17:33:00.247Z</published>
    <updated>2024-07-27T17:33:00.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装-web-sdk"><a href="#安装-web-sdk" class="headerlink" title="安装 web sdk"></a>安装 web sdk</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├─ .vscode          <span class="comment"># Project settings directory for Visual Studio Code</span></span><br><span class="line">├─ Core             <span class="comment"># Directory containing Live2D Cubism Core</span></span><br><span class="line">├─ Framework        <span class="comment"># Directory containing source code</span></span><br><span class="line">such as rendering and animation <span class="built_in">functions</span></span><br><span class="line">└─ Samples</span><br><span class="line">   ├─ Resources     <span class="comment"># Directory containing resources such as model files and images</span></span><br><span class="line">   └─ TypeScript    <span class="comment"># Directory containing TypeScript sample projects</span></span><br></pre></td></tr></table></figure><h3 id="下载CubismWebSamples链接：https-github-com-Live2D-CubismWebSamples"><a href="#下载CubismWebSamples链接：https-github-com-Live2D-CubismWebSamples" class="headerlink" title="下载CubismWebSamples链接：https://github.com/Live2D/CubismWebSamples"></a>下载CubismWebSamples链接：<a href="https://github.com/Live2D/CubismWebSamples">https://github.com/Live2D/CubismWebSamples</a></h3><h3 id="下载Framework链接：https-github-com-Live2D-CubismWebFramework"><a href="#下载Framework链接：https-github-com-Live2D-CubismWebFramework" class="headerlink" title="下载Framework链接：https://github.com/Live2D/CubismWebFramework"></a>下载Framework链接：<a href="https://github.com/Live2D/CubismWebFramework">https://github.com/Live2D/CubismWebFramework</a></h3><h3 id="下载Core链接：https-github-com-cqc-elycio-live2dDemo-tree-master-Core"><a href="#下载Core链接：https-github-com-cqc-elycio-live2dDemo-tree-master-Core" class="headerlink" title="下载Core链接：https://github.com/cqc-elycio/live2dDemo/tree/master/Core"></a>下载Core链接：<a href="https://github.com/cqc-elycio/live2dDemo/tree/master/Core">https://github.com/cqc-elycio/live2dDemo/tree/master/Core</a></h3><p>包括：live2dcubismcore.d.ts, live2dcubismcore.js, live2dcubismcore.js.map, live2dcubismcore.min.js</p><h3 id="参考博客：https-blog-csdn-net-qq-37735413-article-details-104769280"><a href="#参考博客：https-blog-csdn-net-qq-37735413-article-details-104769280" class="headerlink" title="参考博客：https://blog.csdn.net/qq_37735413/article/details/104769280"></a>参考博客：<a href="https://blog.csdn.net/qq_37735413/article/details/104769280">https://blog.csdn.net/qq_37735413/article/details/104769280</a></h3><h1 id="build样例并运行demo"><a href="#build样例并运行demo" class="headerlink" title="build样例并运行demo"></a>build样例并运行demo</h1><p>安装Node.js</p><p>下载地址：<a href="https://nodejs.org/en/download/">Node.js</a></p><p>安装TypeScript</p><p>安装方式：用nodejs带的npm来安装，命令: npm install -g typescript</p><h2 id="查看node-js版本"><a href="#查看node-js版本" class="headerlink" title="查看node.js版本"></a>查看node.js版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#版本</span></span><br><span class="line">npm -v</span><br><span class="line">8.19.4</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line">v16.20.2</span><br></pre></td></tr></table></figure><h2 id="换npm源"><a href="#换npm源" class="headerlink" title="换npm源"></a>换npm源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.查看当前源</span><br><span class="line">npm config get registry</span><br><span class="line">2. 更换npm源为国内淘宝镜像</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com/</span><br><span class="line">3. 还原npm源</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure><h2 id="安装VSCode插件-Live-Server"><a href="#安装VSCode插件-Live-Server" class="headerlink" title="安装VSCode插件 Live Server"></a>安装VSCode插件 Live Server</h2><h2 id="运行编译"><a href="#运行编译" class="headerlink" title="运行编译"></a>运行编译</h2><p>VSCode中Teminal —&gt; Run Build Task —&gt; npm:build - Samples/TypeScript/Demo</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>对 CubismWebSamples-4-r.3\Samples\TypeScript\Demo\index.html 用 Live Server Go Live 即可</p><h2 id="模型下载"><a href="#模型下载" class="headerlink" title="模型下载"></a>模型下载</h2><p>推荐下载链接：<a href="https://github.com/Eikanya/Live2d-model">https://github.com/Eikanya/Live2d-model</a></p><p>使用GitZip可单个文件下载，链接：<a href="https://gitzip.org/">https://gitzip.org/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装-web-sdk&quot;&gt;&lt;a href=&quot;#安装-web-sdk&quot; class=&quot;headerlink&quot; title=&quot;安装 web sdk&quot;&gt;&lt;/a&gt;安装 web sdk&lt;/h1&gt;&lt;h2 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;head</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【MBJC】作品展示 works</title>
    <link href="https://samsarambjc.github.io/posts/70d2f6ba.html"/>
    <id>https://samsarambjc.github.io/posts/70d2f6ba.html</id>
    <published>2024-06-07T11:53:44.000Z</published>
    <updated>2024-07-27T17:33:00.247Z</updated>
    
    <content type="html"><![CDATA[<h1 id="作品展示"><a href="#作品展示" class="headerlink" title="作品展示"></a>作品展示</h1><h2 id="机器人"><a href="#机器人" class="headerlink" title="机器人"></a>机器人</h2><h3 id="基于深度强化学习的机械臂规划研究"><a href="#基于深度强化学习的机械臂规划研究" class="headerlink" title="基于深度强化学习的机械臂规划研究"></a>基于深度强化学习的机械臂规划研究</h3><ul><li><p>仿真模型规划</p><div align=center><img src="../img/works/仿真模型规划.gif"/></div></li><li><p>侧面拍摄视角</p><div align=center><img src="../img/works/侧面拍摄视角.gif"/></div></li><li><p>摄像头视角</p><div align=center><img src="../img/works/摄像头视角.gif"/></div></li></ul><h3 id="基于多目标识别的机械臂无序抓取及叠罗汉"><a href="#基于多目标识别的机械臂无序抓取及叠罗汉" class="headerlink" title="基于多目标识别的机械臂无序抓取及叠罗汉"></a>基于多目标识别的机械臂无序抓取及叠罗汉</h3><ul><li><p>后台程序界面</p><div align=center><img src="../img/works/媒体1.gif"/></div></li><li><p>实际运行画面</p><div align=center><img src="../img/works/媒体2.gif"/></div></li></ul><h3 id="UR5-机械臂在-Matlab-Gazebo-仿真环境下的主动避障及运动规划"><a href="#UR5-机械臂在-Matlab-Gazebo-仿真环境下的主动避障及运动规划" class="headerlink" title="UR5 机械臂在 Matlab-Gazebo 仿真环境下的主动避障及运动规划"></a>UR5 机械臂在 Matlab-Gazebo 仿真环境下的主动避障及运动规划</h3><ul><li><p>Matlab模拟规划</p><div align=center><img src="../img/works/媒体7.gif"/></div></li><li><p>Gazebo仿真验证</p><div align=center><img src="../img/works/媒体8.gif"/></div></li></ul><h3 id="基于移动机器人的电力设备巡检"><a href="#基于移动机器人的电力设备巡检" class="headerlink" title="基于移动机器人的电力设备巡检"></a>基于移动机器人的电力设备巡检</h3><ul><li><p>后台程序界面</p><div align=center><img src="../img/works/媒体4.gif"/></div></li><li><p>实际运行画面</p><div align=center><img src="../img/works/媒体5.gif"/></div></li></ul><h2 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h2><h3 id="智能风机缺陷检测平台"><a href="#智能风机缺陷检测平台" class="headerlink" title="智能风机缺陷检测平台"></a>智能风机缺陷检测平台</h3><div align=center><img src="../img/works/媒体3.gif"/></div><h2 id="嵌入式"><a href="#嵌入式" class="headerlink" title="嵌入式"></a>嵌入式</h2><h3 id="基于树莓派嵌入式系统的智能小车"><a href="#基于树莓派嵌入式系统的智能小车" class="headerlink" title="基于树莓派嵌入式系统的智能小车"></a>基于树莓派嵌入式系统的智能小车</h3><ul><li><p>后台程序界面</p><div align=center><img src="../img/works/媒体10.gif"/></div></li><li><p>实际运行画面</p><div align=center><img src="../img/works/媒体9.gif"/></div></li></ul><h2 id="大语言模型"><a href="#大语言模型" class="headerlink" title="大语言模型"></a>大语言模型</h2><h3 id="ai虚拟形象"><a href="#ai虚拟形象" class="headerlink" title="ai虚拟形象"></a>ai虚拟形象</h3><ul><li>实际运行画面<video width="960" height="540" controls> <source src="https://pomf2.lain.la/f/iphv1e18.mp4" type="video/mp4"></video> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;作品展示&quot;&gt;&lt;a href=&quot;#作品展示&quot; class=&quot;headerlink&quot; title=&quot;作品展示&quot;&gt;&lt;/a&gt;作品展示&lt;/h1&gt;&lt;h2 id=&quot;机器人&quot;&gt;&lt;a href=&quot;#机器人&quot; class=&quot;headerlink&quot; title=&quot;机器人&quot;&gt;&lt;/a&gt;机器</summary>
      
    
    
    
    
  </entry>
  
</feed>
